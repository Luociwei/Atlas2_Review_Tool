//
//  RPC_Client.h
//  RPC_Client
//

$#include "RPC_Client_G_1.h"

class RPC_Client_G_1 {

public:
    RPC_Client_G_1();
    RPC_Client_G_1(const char* filePath);
    ~RPC_Client_G_1();
    
    int CreateIPC(const char* reply, const char* publish);
    int CreateRepPubPort(const char* rep, const char* pub,int channel);  //control cylinder,only channel 0 can control
    
    int initWithEndpoint(const char* requester, const char* receiver);
    int initWithEndpoint(const char* requester, const char* receiver, int interval_ms, int retries);
    int isServerReady();
    const char* getServerMode();
    const char* isServerUpToDate();
    
    const char* rpc_client(const char* command,int timeout=3000);
    const char* rpc_client2(const char* command,int timeout=3000);
    int UnLockSendCmd();
    int sendFile(const char* srcFile, const char* Folder, int timeout);
    const char* getFile(const char* target, int timeout);
    int getAndWriteFile(const char* target, const char* dest, int timeout);
    
};

