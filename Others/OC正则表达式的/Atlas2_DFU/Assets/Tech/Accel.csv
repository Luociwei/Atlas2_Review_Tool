TestName,TestActions,Disable,Input,Output,Timeout,Retries,AdditionalParameters,ExitEarly,SetPoison,Commands,FA,Condition,Notes
SensorData_1,Common:sendCmdAndCreateRecord,,,[listsensors_resp],10,,"{""subsubtestname"": ""read_vendor"",""dutPluginName"":""dut""}",,,sensor --listsensors,,,
,Common:regexParseString,,[listsensors_resp],,,,"{""subsubtestname"": ""accel_vendor"", ""attribute"":""Accel_vendor"",""pattern"": ""Name: accel\\s+Description:\\s+(\\w+)\\s+""}",,,,,,
,Common:regexParseString,,[listsensors_resp],,,,"{""subsubtestname"": ""gyro_vendor"", ""attribute"":""Gyro_vendor"",""pattern"": ""Name: gyro\\s+Description:\\s+(\\w+)\\s+""}",,,,,,
,Common:regexParseString,,[listsensors_resp],,,,"{""subsubtestname"": ""inertial_type"", ""attribute"": ""Inertial_Type"",""pattern"": ""Name: accel\\s+Description:\\s+([\\s\\w]+)\\s+Accelerometer""}",,,,,,
,Common:sendCmdAndCreateRecord,,,[accel_only_test_resp],10,,"{""subsubtestname"": ""accel_only_test"",""targetindex"":""3"",""dutPluginName"":""dut""}",,,sensor --sel accel --init;wait 20;sensor --sel accel --exectest selftest;sensor --sel accel --turnoff;wait 20,,,Sensor_Test
,Common:sendCmdAndCreateRecord,,,,10,,"{""subsubtestname"": ""accel_connectivity"",""targetindex"":""3"",""expect"": ""passed"",""dutPluginName"":""dut""}",,,sensor --sel accel --init;wait 20;sensor --sel accel --conntest;sensor --sel accel --turnoff;wait 20,,,Sensor_Test
,Common:checkExpect,,[accel_only_test_resp],{accel_selftest_result},,,"{""subsubtestname"": ""accel_selftest"", ""expect"": ""PASS"", ""failWhenNotFound"":""YES""}",,,,,,Sensor_Test
,Common:regexParseNumber,,[accel_only_test_resp],,,,"{""subsubtestname"": ""accel_selftest_x_pos"",""pattern"": ""pos-response: x = (-?[0-9]+), y = -?[0-9]+, z = -?[0-9]+""}",,,,,accel_selftest_result==FALSE,Sensor_Test
,Common:regexParseNumber,,[accel_only_test_resp],,,,"{""subsubtestname"": ""accel_selftest_y_pos"",""pattern"": ""pos-response: x = -?[0-9]+, y = (-?[0-9]+), z = -?[0-9]+""}",,,,,accel_selftest_result==FALSE,Sensor_Test
,Common:regexParseNumber,,[accel_only_test_resp],,,,"{""subsubtestname"": ""accel_selftest_z_pos"",""pattern"": ""pos-response: x = -?[0-9]+, y = -?[0-9]+, z = (-?[0-9]+)""}",,,,,accel_selftest_result==FALSE,Sensor_Test
,Common:regexParseNumber,,[accel_only_test_resp],,,,"{""subsubtestname"": ""accel_selftest_x_neg"",""pattern"": ""neg-response: x = (-?[0-9]+), y = -?[0-9]+, z = -?[0-9]+""}",,,,,accel_selftest_result==FALSE,Sensor_Test
,Common:regexParseNumber,,[accel_only_test_resp],,,,"{""subsubtestname"": ""accel_selftest_y_neg"",""pattern"": ""neg-response: x = -?[0-9]+, y = (-?[0-9]+), z = -?[0-9]+""}",,,,,accel_selftest_result==FALSE,Sensor_Test
,Common:regexParseNumber,,[accel_only_test_resp],,,,"{""subsubtestname"": ""accel_selftest_z_neg"",""pattern"": ""neg-response: x = -?[0-9]+, y = -?[0-9]+, z = (-?[0-9]+)""}",,,,,accel_selftest_result==FALSE,Sensor_Test
,Common:regexParseNumber,,[accel_only_test_resp],,,,"{""subsubtestname"": ""accel_selftest_x_symerr"",""pattern"": ""SymErr-response: x = (-?[0-9]+), y = -?[0-9]+, z = -?[0-9]+""}",,,,,accel_selftest_result==FALSE,Sensor_Test
,Common:regexParseNumber,,[accel_only_test_resp],,,,"{""subsubtestname"": ""accel_selftest_y_symerr"",""pattern"": ""SymErr-response: x = -?[0-9]+, y = (-?[0-9]+), z = -?[0-9]+""}",,,,,accel_selftest_result==FALSE,Sensor_Test
,Common:regexParseNumber,,[accel_only_test_resp],,,,"{""subsubtestname"": ""accel_selftest_z_symerr"",""pattern"": ""SymErr-response: x = -?[0-9]+, y = -?[0-9]+, z = (-?[0-9]+)""}",,,,,accel_selftest_result==FALSE,Sensor_Test
,Common:sendCmdAndCreateRecord,,,,10,,"{""subsubtestname"": ""accel_only_test_fail"",""dutPluginName"":""dut""}",,,sensor --sel accel --exectest selftest_manual;sensor --sel accel --turnoff;wait 20,,,Sensor_Test
,Common:sendCmdAndCreateRecord,,,[accel_only_test_sec_resp],10,,"{""subsubtestname"": ""accel_only_test_sec"",""dutPluginName"":""dut"",""targetindex"":""5""}",,,sensor --sel accel --init;wait 20;sensor --sel accel --set rate 100;sensor --sel accel --set dynamic_range 8;sensor --sel accel --sample 500ms --stats;sensorreg -s accel --dump;sensor --sel accel --turnoff,,,Sensor_Test
,Common:regexParseNumber,,[accel_only_test_sec_resp],,,,"{""subsubtestname"": ""FS8g_ODR100HZ_Zup_accel_only_average_x"",""pattern"": ""average: X = (-?[0-9.]+), Y = -?[0-9.]+, Z = -?[0-9.]+, T = -?[0-9.]+""}",,,,,,Sensor_Test
,Common:regexParseNumber,,[accel_only_test_sec_resp],,,,"{""subsubtestname"": ""FS8g_ODR100HZ_Zup_accel_only_average_y"",""pattern"": ""average: X = -?[0-9.]+, Y = (-?[0-9.]+), Z = -?[0-9.]+, T = -?[0-9.]+""}",,,,,,Sensor_Test
,Common:regexParseNumber,,[accel_only_test_sec_resp],,,,"{""subsubtestname"": ""FS8g_ODR100HZ_Zup_accel_only_average_z"",""pattern"": ""average: X = -?[0-9.]+, Y = -?[0-9.]+, Z = (-?[0-9.]+), T = -?[0-9.]+""}",,,,,,Sensor_Test
,Common:regexParseNumber,,[accel_only_test_sec_resp],,,,"{""subsubtestname"": ""FS8g_ODR100HZ_Zup_accel_only_std_x"",""pattern"": ""std-dev: X = (-?[0-9.]+), Y = -?[0-9.]+, Z = -?[0-9.]+, T = -?[0-9.]+""}",,,,,,Sensor_Test
,Common:regexParseNumber,,[accel_only_test_sec_resp],,,,"{""subsubtestname"": ""FS8g_ODR100HZ_Zup_accel_only_std_y"",""pattern"": ""std-dev: X = -?[0-9.]+, Y = (-?[0-9.]+), Z = -?[0-9.]+, T = -?[0-9.]+""}",,,,,,Sensor_Test
,Common:regexParseNumber,,[accel_only_test_sec_resp],,,,"{""subsubtestname"": ""FS8g_ODR100HZ_Zup_accel_only_std_z"",""pattern"": ""std-dev: X = -?[0-9.]+, Y = -?[0-9.]+, Z = (-?[0-9.]+), T = -?[0-9.]+""}",,,,,,Sensor_Test
,Common:regexParseNumber,,[accel_only_test_sec_resp],,,,"{""subsubtestname"": ""FS8g_ODR100HZ_accel_only_odr"",""pattern"": ""calculated odr: (-?[0-9.]+)Hz""}",,,,,,Sensor_Test
,Common:sendCmdAndCreateRecord,,,,10,,"{""subsubtestname"": ""accel_init_normal"", ""expect"": ""OK"",""dutPluginName"":""dut""}",,,sensor --sel gyro --turnoff,,,
,Common:sendCmdAndCreateRecord,,,,10,,"{""dutPluginName"":""dut""}",,,wait 20,,,
,Common:sendCmdAndCreateRecord,,,,10,,"{""dutPluginName"":""dut""}",,,"sensor --sel accel,gyro --init",,,
,Common:sendCmdAndCreateRecord,,,,10,,"{""dutPluginName"":""dut""}",,,wait 200,,,
,Common:sendCmdAndCreateRecord,,,,10,,"{""subsubtestname"": ""gyro_selftest"", ""expect"": ""PASS"",""dutPluginName"":""dut""}",,,sensor --sel gyro --exectest selftest,,,
,Common:sendCmdAndCreateRecord,,,,10,,"{""dutPluginName"":""dut""}",,,"sensor --sel accel,gyro --turnoff",,,
,Common:sendCmdAndCreateRecord,,,,10,,"{""dutPluginName"":""dut""}",,,wait 20,,,
,Common:sendCmdAndCreateRecord,,,,10,,"{""dutPluginName"":""dut""}",,,"sensor --sel accel,gyro --init",,,
,Common:sendCmdAndCreateRecord,,,,10,,"{""dutPluginName"":""dut""}",,,wait 200,,,
,Common:sendCmdAndCreateRecord,,,,10,,"{""dutPluginName"":""dut""}",,,sensor --sel accel --set rate 200,,,
,Common:sendCmdAndCreateRecord,,,,10,,"{""dutPluginName"":""dut""}",,,sensor --sel gyro --set rate 200,,,
,Common:sendCmdAndCreateRecord,,,,10,,"{""dutPluginName"":""dut""}",,,sensor --sel accel --set dynamic_range 8,,,
,Common:sendCmdAndCreateRecord,,,,10,,"{""dutPluginName"":""dut""}",,,sensor --sel gyro --set dynamic_range 2000,,,
,Common:sendCmdAndCreateRecord,,,(accel_gyro_test_resp),10,,"{""dutPluginName"":""dut""}",,,"sensor --sel accel,gyro --sample 500ms --stats",,,
,Common:regexParseNumber,,(accel_gyro_test_resp),,,,"{""subsubtestname"": ""FS8g_ODR200HZ_Zup_accel_normal_average_x"",""pattern"": ""accel:\\s+#.*\\s+.*\\s+.*\\s+average: X = (-?[0-9.]+), Y = -?[0-9.]+, Z = -?[0-9.]+, T = -?[0-9.]+""}",,,,,,
,Common:regexParseNumber,,(accel_gyro_test_resp),,,,"{""subsubtestname"": ""FS8g_ODR200HZ_Zup_accel_normal_average_y"",""pattern"": ""accel:\\s+#.*\\s+.*\\s+.*\\s+average: X = -?[0-9.]+, Y = (-?[0-9.]+), Z = -?[0-9.]+, T = -?[0-9.]+""}",,,,,,
,Common:regexParseNumber,,(accel_gyro_test_resp),,,,"{""subsubtestname"": ""FS8g_ODR200HZ_Zup_accel_normal_average_z"",""pattern"": ""accel:\\s+#.*\\s+.*\\s+.*\\s+average: X = -?[0-9.]+, Y = -?[0-9.]+, Z = (-?[0-9.]+), T = -?[0-9.]+""}",,,,,,
,Common:regexParseNumber,,(accel_gyro_test_resp),,,,"{""subsubtestname"": ""FS8g_ODR200HZ_Zup_accel_normal_std_x"",""pattern"": ""accel:\\s+#.*\\s+.*\\s+.*\\s+.*\\s+std-dev: X = (-?[0-9.]+), Y = -?[0-9.]+, Z = -?[0-9.]+, T = -?[0-9.]+""}",,,,,,
,Common:regexParseNumber,,(accel_gyro_test_resp),,,,"{""subsubtestname"": ""FS8g_ODR200HZ_Zup_accel_normal_std_y"",""pattern"": ""accel:\\s+#.*\\s+.*\\s+.*\\s+.*\\s+std-dev: X = -?[0-9.]+, Y = (-?[0-9.]+), Z = -?[0-9.]+, T = -?[0-9.]+""}",,,,,,
,Common:regexParseNumber,,(accel_gyro_test_resp),,,,"{""subsubtestname"": ""FS8g_ODR200HZ_Zup_accel_normal_std_z"",""pattern"": ""accel:\\s+#.*\\s+.*\\s+.*\\s+.*\\s+std-dev: X = -?[0-9.]+, Y = -?[0-9.]+, Z = (-?[0-9.]+), T = -?[0-9.]+""}",,,,,,
,Common:regexParseNumber,,(accel_gyro_test_resp),,,,"{""subsubtestname"": ""FS8g_ODR200HZ_Zup_accel_normal_odr"",""pattern"": ""accel:\\s+#.*\\s+.*\\s+calculated odr: (-?[0-9.]+)Hz""}",,,,,,
