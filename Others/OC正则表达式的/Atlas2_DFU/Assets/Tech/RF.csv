TestName,TestActions,Disable,Input,Output,Timeout,Retries,AdditionalParameters,ExitEarly,SetPoison,Commands,FA,Condition,Notes
SmokeyTest_WDFU,Common:smokeyRunAndParse,,,[smokey_WDFU_resp],1000,,"{""subsubtestname"":""Smokey_Run"",""hangTimeout"":50}",,,"smokey WDFU --run --clean",FA_POWER_OFF,,"Run WDFU Smokey command and parse the response"
Wifi_1,Common:sendCmdAndCreateRecord,,,,5,,"{""subsubtestname"": ""WIFI_ON"", ""expect"": ""OK"",""dutPluginName"":""dut""}",,,"wifi --on",,,"wifi power on"
,Common:sendCmdAndCreateRecord,,,,5,,"{""subsubtestname"": ""WIFI_Load_Firmware"", ""expect"": ""OK"",""dutPluginName"":""dut""}",,,"wifi --load_firmware",,,"WiFi load firmware"
,Common:sendCmdAndCreateRecord,,,(WIFI_Properties_resp),5,,"{""subsubtestname"": ""WIFI_Properties"", ""expect"": ""OK"",""dutPluginName"":""dut""}",,,"wifi --properties",,,"print WIFI FW version"
,Common:regexParseString,,(WIFI_Properties_resp),[WIFI_MODULE],,,"{""subsubtestname"": ""WIFI_Module_Version"", ""attribute"": ""WIFI_MODULE"",""pattern"": ""module-revision:\\s+\""(\\d.\\d\\s+\\w=\\w)\""""}",,,,,,"WiFi module revision"
,Common:regexParseString,,(WIFI_Properties_resp),[WIFI_FIRMWARE],,,"{""subsubtestname"": ""WIFI_Firmware_Version"", ""attribute"": ""WIFI_FIRMWARE"",""pattern"": ""firmware-filename:\\s+\""([0-9A-Za-z-_.]+)\""""}",,,,,,"WiFi firmware version"
,Common:regexParseString,,(WIFI_Properties_resp),[WIFI_NVRAM],,,"{""subsubtestname"": ""WIFI_Nvram"", ""attribute"": ""WIFI_NVRAM"",""pattern"": ""nvram-filename:\\s+\""([0-9A-Za-z-_.]+)\""""}",,,,,,"WiFi NVRAM"
,Common:versionCompare,,"[WIFI_MODULE],[WIFI_FIRMWARE],[WIFI_NVRAM]",,,,"{""subsubtestname"": ""WIFI_Compare"",""comparekey"":""WIFI FW""}",,,,,,"compare WIFI FW version"
,Common:sendCmdAndCreateRecord,,,,5,,"{""subsubtestname"": ""WIFI_OTP"", ""expect"": ""OK"",""dutPluginName"":""dut""}",,,"wifi --dump_otp ",,,"WiFi dump out OTP"
Wifi_2,Common:sendCmdAndCreateRecord,,,,5,,"{""subsubtestname"": ""WIFI_OFF"", ""expect"": ""OK"",""dutPluginName"":""dut""}",,,"wifi --off",,,"wifi turn off"
Baseband,Common:sendCmdAndCreateRecord,,,"(Load_Status),(BB_Load_Firmware_resp)",40,,"{""subsubtestname"": ""BB_Load_Firmware"", ""expect"": ""Passed"",""pattern"": ""firmware-load=\""(\\w+)\""""}",,,"time baseband --off --on --load_firmware",,,"baseband load firmware"
,Common:regexParseString,Y,(BB_Load_Firmware_resp),,,,"{""subsubtestname"": ""BB_Load_Firmware"", ""pattern"": ""firmware-load=\""(\\w+)\""""}",,,,,,"baseband load firmware"
,Common:regexParseNumber,,(BB_Load_Firmware_resp),,,,"{""subsubtestname"": ""BB_Time"", ""pattern"": ""time:\\s+(\\d+)\\s+ms""}",,,,,,"baseband boot up time"
,Common:sendCmdAndCreateRecord,,,,20,,"{""subsubtestname"": ""BB_Wait_For_Ready"", ""expect"": ""OK""}",,,"time baseband --wait_for_ready ",,,"baseband waiting for ready"
,Common:sendCmdAndCreateRecord,,,,10,,"{""subsubtestname"": ""BB_PING"", ""expect"": ""PASS""}",,,"baseband --ping",,,"ping baseband"
,Common:sendCmdAndCreateRecord,,,(BB_Properties_resp),10,,"{""subsubtestname"": ""BB_Properties"", ""expect"": ""OK""}",,,"baseband --properties",,,"print BBFW version"
,Common:regexParseString,,(BB_Properties_resp),[BB_FIRMWARE],,,"{""subsubtestname"": ""BB_Firmware_Version"", ""comparekey"":""BBFW"",""attribute"": ""BB_FIRMWARE"", ""pattern"": ""firmware-version:\\s+\""([0-9A-Za-z-_.]+debug)""}",,,,,,"WiFi firmware version"
,Common:regexParseString,,(BB_Properties_resp),[BB_SN],,,"{""subsubtestname"": ""BB_SN"",""attribute"": ""BB_SN"",""pattern"": ""\\ssn:\\s+\""(0x[0-9A-F]+)\""""}",,,,,,"Baseband SN"
,Common:sendCmdAndCreateRecord,,,,10,,"{""subsubtestname"": ""BB_OFF"", ""expect"": ""OK""}",,,"baseband --off",,,"baseband turn off"
Bluetooth,Common:sendCmdAndCreateRecord,,,,5,,"{""subsubtestname"": ""BT_ON"", ""expect"": ""OK"",""dutPluginName"":""dut""}",,,"bluetooth --on",,,"Bluetooth power on"
,Common:sendCmdAndCreateRecord,,,,5,,"{""subsubtestname"": ""BT_Load_Firmware"", ""expect"": ""OK"",""dutPluginName"":""dut""}",,,"bluetooth --load_firmware",,,"Bluetooth load firmware"
,Common:sendCmdAndCreateRecord,,,(BT_Properties_resp),5,,"{""subsubtestname"": ""BT_Properties"", ""expect"": ""OK"",""dutPluginName"":""dut""}",,,"bluetooth --properties",,,"print Bluetooth version"
,Common:regexParseString,,(BT_Properties_resp),[BT_FIRMWARE],,,"{""subsubtestname"": ""BT_Firmware_Version"", ""attribute"": ""BT_FIRMWARE"",""pattern"": ""firmware-filename:\\s+\""([0-9A-Za-z-_.]+)\""""}",,,,,,"Bluetooth firmware version"
,Common:versionCompare,,"[WIFI_MODULE],[BT_FIRMWARE]",,,,"{""subsubtestname"": ""BT_Compare"",""comparekey"":""BT FW""}",,,,,,"compare with Bluetooth version"
,Common:sendCmdAndCreateRecord,,,,5,,"{""subsubtestname"": ""BT_OFF"", ""expect"": ""OK"",""dutPluginName"":""dut""}",,,"bluetooth --off",,,"Bluetooth turn off"
NFC,Common:sendCmdAndCreateRecord,,,,5,,"{""subsubtestname"": ""SH_ON"", ""expect"": ""OK"",""dutPluginName"":""dut""}",,,"stockholm --on",,,"Stockholm power on"
,Common:sendCmdAndCreateRecord,,,,5,,"{""subsubtestname"": ""SH_INIT"", ""expect"": ""OK"",""dutPluginName"":""dut""}",,,"stockholm --init",,,"Stockholm init"
,Common:sendCmdAndCreateRecord,,,,30,,"{""subsubtestname"": ""SH_Load_Firmware"", ""expect"": ""OK"",""dutPluginName"":""dut""}",,,"stockholm --download_fw mfg",,,"Stockholm load firmware"
,Common:sendCmdAndCreateRecord,,,(SH_Properties_resp),5,,"{""subsubtestname"": ""SH_Properties"",""dutPluginName"":""dut""}",,,"stockholm --properties",,,"Stockholm properties"
,Common:regexParseString,,(SH_Properties_resp),[SH_FIRMWARE],,,"{""subsubtestname"": ""SH_Firmware_Version"", ""attribute"": ""SH_FIRMWARE"",""pattern"": ""firmware-version:\\s+(0x[A-Z0-9]+)""}",,,,,,"Stockholm firmware version"
,Common:sendCmdAndCreateRecord,,,,5,,"{""subsubtestname"": ""SH_Loopback_20"", ""expect"": ""PASS"",""dutPluginName"":""dut""}",,,"stockholm --loopback 20",,,"Stockholm loopback test"
,Common:sendCmdAndCreateRecord,,,,5,,"{""subsubtestname"": ""SH_OFF"", ""expect"": ""OK"",""dutPluginName"":""dut""}",,,"stockholm --off",,,"Stockholm turn off"
Syscfg_RFEM,Common:checkExpect,,[smokey_WDFU_resp],{RFEM_HAS_ADDED},,,"{""subsubtestname"": ""RFEM_read"", ""expect"": ""RFEM has already been added""}",,,,,,"check RFEM already have or not; only fresh board need to write the RFEM key"
,Common:sendCmdAndCreateRecord,,,(RFEM_print_resp),10,,"{""subsubtestname"": ""RFEM_print""}",,,"syscfg printbyte RFEM",,,"Read RFEM key with command syscfg printbyte RFEM"
,Common:regexParseString,,(RFEM_print_resp),(RFEM_print_value),,,"{""subsubtestname"": ""RFEM_key"", ""attribute"": ""RFEMKey"",""removeAllSpaces"":""YES"",""pattern"": ""Hex:\\s+([0-9A-F\\s]+)""}",,,,,,"upload RFEM_Key value to insight"
,Common:regexParseString,,[smokey_WDFU_resp],,,,"{""subsubtestname"": ""Readback_compare"",""target"": ""$(RFEM_print_value)"", ""pattern"": ""syscfg addbyte RFEM ([0-9A-F]+)""}",,,,,RFEM_HAS_ADDED==FALSE,"Compare RFEM with Read back and write key"
,Common:getByteLen,,(RFEM_print_value),,,,"{""subsubtestname"": ""Length""}",,,,,,"check RFEM key length; mush be 24byte"
,Common:regexParseString,,(RFEM_print_value),,,,"{""subsubtestname"": ""Version"", ""pattern"": ""([0-9A-F]{8})[0-9A-F]{8}[0-9A-F]+"", ""target"": ""01000000""}",,,,,,"frist 4byte mush be 01000000"
,Common:regexParseString,,(RFEM_print_value),,,,"{""subsubtestname"": ""Expected_value"", ""pattern"": ""[0-9A-F]{8}([0-9A-F]{8})[0-9A-F]+"", ""target"": ""00000000""}",,,,,,"second 4byte mush be 00000000"
,Common:versionCompare,,(RFEM_print_value),,,,"{""subsubtestname"": ""RFEM_Compare"", ""comparekey"": ""RFEM""}",,,,,,"RFEM check with Versioncompare file"
Syscfg_WSKU,Common:checkExpect,,[smokey_WDFU_resp],{WSKU_HAS_ADDED},,,"{""subsubtestname"": ""WSKU_read"", ""expect"": ""WSKU has already been added""}",,,,,,"check RFEM already have or not;  only fresh board need to write the RFEM key"
,Common:sendCmdAndCreateRecord,,,(WSKU_print_resp),10,,"{""subsubtestname"": ""WSKU_print""}",,,"syscfg print WSKU",,,"Read WSKU key with command syscfg print WSKU"
,Common:regexParseString,,(WSKU_print_resp),(WSKU_print_value),,,"{""subsubtestname"": ""WSKU_key"", ""attribute"": ""WSKUKey"", ""pattern"": ""syscfg print WSKU\\s+([0-9A-Fx ]+)""}",,,,,,"upload WSKU_Key to insight"
,Common:regexParseString,,[smokey_WDFU_resp],,,,"{""subsubtestname"": ""Readback_compare"",""target"": ""$(WSKU_print_value)"", ""pattern"": ""syscfg add WSKU ([0-9A-Fx ]+)""}",,,,,WSKU_HAS_ADDED==FALSE,"Compare WSKU with Read back and writ key"
,Common:getByteLen,,(WSKU_print_value),,,,"{""subsubtestname"": ""Length""}",,,,,,"check WSKU key length; mush be 16byte"
,Common:regexParseString,,(WSKU_print_value),,,,"{""subsubtestname"": ""Version"", ""pattern"": ""(0x[0-9A-F]{8}) 0x[0-9A-F]{8,} [0-9A-Fx ]+"", ""target"": ""0x00000001""}",,,,,,"frist 4byte mush be 0x00000001"
,Common:regexParseString,,(WSKU_print_value),,,,"{""subsubtestname"": ""Expected_value"", ""pattern"": ""0x[0-9A-F]{8} (0x[0-9A-F]{8}) [0-9A-Fx ]+"", ""target"": ""0x00000000""}",,,,,,"second 4byte mush be 0x00000000"
,Common:versionCompare,,"(WSKU_print_value),[sn],[smokey_WDFU_resp]",,,,"{""subsubtestname"": ""WSKU_Compare"", ""comparekey"": ""WSKU"", ""pattern"": ""(SKU\\s+[0-9]+)\\s+""}",,,,,,"WSKU check with Versioncompare file"
Syscfg_Delete_RFEM_and_WSKU,Common:sendCmdAndCreateRecord,,,,10,,"{""subsubtestname"": ""Delete_RFEMKey""}",,,"syscfg delete RFEMKey",,,"delete RFEM Key value"
,Common:sendCmdAndCreateRecord,,,,10,,"{""subsubtestname"": ""Delete_WSKUKey""}",,,"syscfg delete WSKUKey",,mlb_type==MLB_B,"delete WSKUKey value"
